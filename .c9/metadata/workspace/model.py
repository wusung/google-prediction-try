{"filter":false,"title":"model.py","tooltip":"/model.py","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":114,"column":13},"action":"insert","lines":["import httplib2","from django.conf import settings","from oauth2client.client import SignedJwtAssertionCredentials","from apiclient import discovery","","class APIManager:","","\t@staticmethod","\tdef get_api():","\t\tif not hasattr(APIManager, '__api'):","\t\t\tAPIManager.__auth()","\t\treturn APIManager.__api","","\t@staticmethod","\tdef __auth():","\t\t# TODO Validate credentials","\t\tprivate_key = open(settings.GOOGLE_PREDICTION_PRIVATE_KEY).read()","\t\thttp = httplib2.Http()","","\t\tcredentials = SignedJwtAssertionCredentials(","\t\t\t \tsettings.GOOGLE_PREDICTION_PROJECT_EMAIL,","\t\t\t \tprivate_key,","\t\t\t \t[","\t\t\t      'https://www.googleapis.com/auth/devstorage.full_control',","\t\t\t      'https://www.googleapis.com/auth/devstorage.read_only',","\t\t\t      'https://www.googleapis.com/auth/devstorage.read_write',","\t\t\t      'https://www.googleapis.com/auth/prediction',","\t\t\t    ]","\t\t\t)","","\t\tcredentials.authorize(http)","\t\tAPIManager.__api = discovery.build('prediction', 'v1.6', http=http)","","","class HostedModel:","","\tHOSTED_PROJECT_ID = 414649711441","","\tdef __init__(self, model_name):","\t\tself.model_name = model_name","","\tdef predict(self, input_data):","\t\tif not isinstance(input_data, (list, tuple)):","\t\t\tinput_data = [input_data]","","\t\tbody = {'input': {'csvInstance': input_data}}","\t\treturn APIManager.get_api().hostedmodels().predict(","\t\t\tproject=self.HOSTED_PROJECT_ID,","\t\t\thostedModelName=self.model_name,","\t\t\tbody=body","\t\t).execute()","","","class TrainedModel:","","\tdef __init__(self, project_id, model_name):","\t\tself.project_id, self.model_name = project_id, model_name","","\tdef analyze(self):","\t\treturn APIManager.get_api().trainedmodels().analyze(","\t\t\tproject=self.project_id,","\t\t\tid=self.model_name,","\t\t).execute()","","\tdef delete(self):","\t\tAPIManager.get_api().trainedmodels().delete(","\t\t\tproject=self.project_id,","\t\t\tid=self.model_name,","\t\t).execute()","","\tdef get(self):","\t\treturn APIManager.get_api().trainedmodels().get(","\t\t\tproject=self.project_id,","\t\t\tid=self.model_name,","\t\t).execute()","","\tdef insert(self, storage_data_location):","\t\tbody = {","\t\t\t'storageDataLocation': storage_data_location,","\t\t\t'id': self.model_name,","\t\t}","","\t\treturn APIManager.get_api().trainedmodels().insert(","\t\t\tproject=self.project_id,","\t\t\tbody=body","\t\t).execute()","","\tdef predict(self, input_data):","\t\tif not isinstance(input_data, (list, tuple)):","\t\t\tinput_data = [input_data]","","\t\tbody = {'input': {'csvInstance': input_data}}","\t\treturn APIManager.get_api().trainedmodels().predict(","\t\t\tproject=self.project_id,","\t\t\tid=self.model_name,","\t\t\tbody=body","\t\t).execute()","","\tdef update(self, output, input_data):","\t\tif not isinstance(input_data, (list, tuple)):","\t\t\tinput_data = [input_data]","","\t\tbody = {'csvInstance': input_data, 'output': output}","\t\t","\t\treturn APIManager.get_api().trainedmodels().update(","\t\t\tproject=self.project_id,","\t\t\tid=self.model_name,","\t\t\tbody=body","\t\t).execute()","","\t@staticmethod","\tdef list(project_id):","\t\treturn APIManager.get_api().trainedmodels().list(","\t\t\tproject=project_id","\t\t).execute()"]}]}]]},"ace":{"folds":[],"scrolltop":540,"scrollleft":0,"selection":{"start":{"row":49,"column":12},"end":{"row":49,"column":12},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":35,"state":"start","mode":"ace/mode/python"}},"timestamp":1420277295142,"hash":"f94f30bc149017145b7c6fba8d96fdf7842777cc"}